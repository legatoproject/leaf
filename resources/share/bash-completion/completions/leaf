#compdef leaf

_leaf_argcomplete() {
    local IFS=$'\013'
    COMPREPLY=( $(IFS="$IFS" \
                  COMP_LINE="$COMP_LINE" \
                  COMP_POINT="$COMP_POINT" \
                  COMP_TYPE="$COMP_TYPE" \
                  _ARGCOMPLETE_COMP_WORDBREAKS="$COMP_WORDBREAKS" \
                  _ARGCOMPLETE=1 \
                  leaf 8>&1 9>&2 1>/dev/null 2>/dev/null) )
    if [[ $? != 0 ]]; then
        unset COMPREPLY
    fi
}

_leaf_build_completion() {
	compopt +o nospace
	local values=$(eval $1 2>/dev/null)
	if [[ $? != 0 ]]; then
        unset COMPREPLY
    else
		COMPREPLY+=( $(compgen -W "$values" -- "$2") )
	fi
}

_leaf_command_matches() {
	echo "$COMP_LINE" | grep -E -q "^leaf $1"
}

_leaf_completions()
{
	## DEBUG
	# echo "[DEBUG]  COMP_LINE=$COMP_LINE"
	# echo "[DEBUG]  COMP_WORDS[${#COMP_WORDS[@]}]=${COMP_WORDS[@]}"
	# echo "[DEBUG]  COMP_WORDS=$COMP_CWORD"
	# echo "[DEBUG]  COMP_POINT=$COMP_POINT"

	local cur prev 
	_get_comp_words_by_ref cur prev  


	if _leaf_command_matches "package install "; then
		## AVAILABLE PACKAGES
		_leaf_build_completion "leaf search -aq" $cur
	elif test "$prev" = "-p" -o "$prev" = "--add-package"; then
		## AVAILABLE PACKAGES
		_leaf_build_completion "leaf search -aq" $cur
	elif _leaf_command_matches "search "; then
		## SEARCH MODE
		_leaf_build_completion "leaf search -aq $cur"
	elif _leaf_command_matches "package (uninstall|sync) "; then
		## INSTALLED PACKAGES
		_leaf_build_completion "leaf package list -aq" $cur
	elif _leaf_command_matches "remote (enable|disable|remove) "; then
		## REMOTES
		_leaf_build_completion "leaf remote list -q" $cur
	elif _leaf_command_matches "(select|profile (rename|delete|switch|config|sync)) "; then
		## PROFILES
		_leaf_build_completion "leaf profile list -q" $cur
	elif _leaf_command_matches "env" && test "$prev" = "--unset"; then
		## ENV UNSET
		local scope=${COMP_WORDS[2]}
		_leaf_build_completion "leaf env $scope -q | awk -F '[ =]' '{print \$2}'" $cur
	elif _leaf_command_matches "feature (toggle|query) "; then
		## FEATURES
		if test "$prev" = "toggle" -o "$prev" = "query"; then
			## FEATURE NAMES
			_leaf_build_completion "leaf feature list -q | awk -F '=' '{print \$1}'" $cur
		else
			## FEATURE VALUES
			_leaf_build_completion "leaf feature list -q | awk -F '[=|]' '/^$prev=/ {for (i=2; i<=NF; i++) print \$i}'" $cur
		fi
	elif _leaf_command_matches "help "; then
		## MANPAGES
		_leaf_build_completion "leaf help --list" $cur
	elif _leaf_command_matches "getsrc "; then
		## GETSRC
		_leaf_build_completion "leaf getsrc" $cur
	elif _leaf_command_matches "run [^[:space:]]*$"; then
		## RUN
		_leaf_build_completion "leaf run --oneline | awk -F '[/:]' '{print \$2}'" $cur
	else
		## ARGCOMPLETE 
		_leaf_argcomplete
	fi
}

complete -o nospace -o default -F _leaf_completions "leaf"
