#compdef leaf

# If sourced from ZSH, ensure bashcompinit is loaded 
if [ -n "$ZSH_VERSION" ]; then
	autoload bashcompinit
	bashcompinit
fi

_python_argcomplete() {
    local IFS=$'\013'
    COMPREPLY=( $(IFS="$IFS" \
                  COMP_LINE="$COMP_LINE" \
                  COMP_POINT="$COMP_POINT" \
                  COMP_TYPE="$COMP_TYPE" \
                  _ARGCOMPLETE_COMP_WORDBREAKS="$COMP_WORDBREAKS" \
                  _ARGCOMPLETE=1 \
                  "$1" 8>&1 9>&2 1>/dev/null 2>/dev/null) )
    if [[ $? != 0 ]]; then
        unset COMPREPLY
    fi
}

_process_leaf_completion() {
	local LEAF_SUGGESTIONS="$(eval $1 2> /dev/null)"
	local CURRENT_WORD="${COMP_WORDS[COMP_CWORD]}"
	compopt +o nospace
	COMPREPLY+=($(compgen -W "${LEAF_SUGGESTIONS}" -- "${CURRENT_WORD}"))
}

_leaf_completions()
{
	local PREVIOUS_WORD="${COMP_WORDS[COMP_CWORD-1]}"
	local PREVIOUS_PREVIOUS_WORD="${COMP_WORDS[COMP_CWORD-2]}"

	if test "$PREVIOUS_PREVIOUS_WORD" = "remote"; then
		# Handle remotes
		if test "$PREVIOUS_WORD" = "remove" -o \
			"$PREVIOUS_WORD" = "enable" -o \
			"$PREVIOUS_WORD" = "disable"; then
			_process_leaf_completion "leaf remote list -q"
		fi
	elif test "$PREVIOUS_PREVIOUS_WORD" = "toggle"; then
		# Handle values for features
		_process_leaf_completion "leaf feature list | grep ${PREVIOUS_WORD}: | sed -e 's/^.*(\(.*\))$/\1/;s/|/\n/g'"
	else
		case "$PREVIOUS_WORD" in
			"search"|"install"|"-p"|"--package")
				_process_leaf_completion "leaf search -aq"
				;;
			"remove")
				_process_leaf_completion "leaf package list -aq"
				;;
			"select")
				_process_leaf_completion "leaf profile list -q"
				;;
			"help")
				_process_leaf_completion "leaf help --list"
				;;
			"toggle"|"query")
				_process_leaf_completion "leaf feature list -q"
				;;
			"getsrc")
				_process_leaf_completion "leaf-getsrc"
				;;
			*)
			  _python_argcomplete "$@"
			  ;;
		esac
	fi
}

complete -o nospace -o default -F _leaf_completions "leaf"
